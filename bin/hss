require 'hss'

if ARGV == ['version']
    puts HSS::Version
    exit
end

My_Handler = HSS::Handler.new ENV['HSS_CONFIG']


Input = ARGV.delete_at( ARGV.find_index { |x| x[0, 1] != '-' } || 0 )
Args = ARGV.inject('') { |memo, obj| memo += " '" + obj.gsub(/([$"])/, '\1') + "'" }
Cmd = (ENV.include? 'HSS_DEBUG') ? 'echo ssh' : 'ssh'

if Input.nil? or Input == 'help'
    puts 'How to use:'
    puts '(what you type) -> (where it takes you)'
    Conf['patterns'].each { |pattern| puts pattern['example'] }
else
    Conf['patterns'].each do |pattern|
        next unless Input.match(pattern['short'])
        long_form = eval '"' + pattern['long'] + '"'
        $stdout.syswrite "\033]0;#{Input}\007"
        exec "#{Cmd} #{long_form} #{Args}"
    end
    puts "Couldn't find a matching host for: #{Input}"
    exit 1
end

