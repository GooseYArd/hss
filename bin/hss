#!/usr/bin/env ruby

require 'hss'
require 'shellwords'

My_Handler = HSS::Handler.new(config: ENV['HSS_CONFIG'])

if ARGV == ['version']
  puts HSS::VERSION
  exit
elsif ARGV == ['help'] || ARGV.empty?
  puts 'How to use:'
  puts '(what you type) -> (where it takes you)'
  My_Handler.patterns.each { |pattern| puts pattern['example'] }
  exit
end

short_host = ARGV.delete_at(ARGV.find_index { |x| x[0, 1] != '-' } || 0)

command = if ENV['HSS_COMMAND']
            Shellwords.split(ENV['HSS_COMMAND'])
          else
            ['ssh']
          end

command.insert(0, 'echo') if ENV['HSS_DEBUG']

begin
  long_host = My_Handler.handle short_host
rescue NameError
  exec "#{ENV['HSS_PASS']} #{args} #{short_host}" if ENV.include? 'HSS_PASS'
  raise
end

$stdout.syswrite "\033]0;#{short_host}\007" if $stdout.tty? && $stdin.tty?
exec(*command, *Shellwords.split(long_host), *ARGV)
